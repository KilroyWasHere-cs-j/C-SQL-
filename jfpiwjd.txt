using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.IO;
using System.Threading;
using System.Windows.Forms;

namespace WindowsFormsApp4
{
    /*
     * TODO outFile needs thread locking IT'S DONNNNNNNNNNNNNE
     * 
     */
    public partial class Form1 : Form
    {
        public SqlConnection cn = new SqlConnection();
        private int items = 0;
        private string queryString = "";
        private string fileOut = "";
        private List<string> fileOutPuts = new List<string>();
        private int count = 0; //not bad

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            label7.Text = "V.1.5";
            setColors();
            Thread thread1 = new Thread(new ThreadStart(TimeThread));
            thread1.Start();
        }

        private void TimeThread() //updates data and time
        {
            while (true)
            {
                DateTime aDate = DateTime.Now;
                try
                {
                    Invoke(new Action(() => //allows us to access textBox in other thread
                    {
                        DateTimeLabel.Text = aDate.ToString("HH:mm:ss");
                    }));
                }
                catch
                {

                }
            }
        }

        private void Button1_Click(object sender, EventArgs e)
        {
            Thread mainQueryThread = new Thread(new ThreadStart(QueryThread));
            if (textBox1.Text != string.Empty) //checks textbox to make sure it's not empty
            {
                listBox3.Items.Add("<<Query Set Is Successful>> -- <<Update--Success>>");
                queryString = textBox1.Text.ToString(); //adds queryString = textbox
                mainQueryThread.Start();
            }
            else //noting in textbox 
            {
                listBox3.Items.Add("<<Query Set Is Not Successull>> -- <<Update--Fail>>");
                textBox1.Text = string.Empty;
            }
        }

        private void setColors()
        {
            listBox1.ForeColor = Color.AntiqueWhite;  //listBox one look
            listBox1.BackColor = Color.Black;
            listBox2.ForeColor = Color.AntiqueWhite; //listBox two look
            listBox2.BackColor = Color.Black;
            listBox3.ForeColor = Color.AntiqueWhite; //listBox three look
            listBox3.BackColor = Color.Black;
            SProctxt.ForeColor = Color.AntiqueWhite; //listBox Stored Procedure
            SProctxt.BackColor = Color.Black;
            this.ForeColor = Color.White; //Form1 look
            this.BackColor = Color.Black;
            button1.ForeColor = Color.AntiqueWhite; //button one look
            button1.BackColor = Color.Black;
            button2.ForeColor = Color.AntiqueWhite; //button two look
            button2.BackColor = Color.Black;
        }

        private void QueryThread()
        {
            Invoke(new Action(() => //allows us to access textBox in other thread
            {
                listBox3.Items.Add("<<Connecting to database>> -- <<Update--Success>>");
            }));
            string con = "*********************************************************************************************" //+ DataSource +
                                                                                                                         //";integrated Security=sspi;initial catalog=" + InitialCatalog + ";");  ";
            try
            {
                Invoke(new Action(() =>
                {
                    listBox3.Items.Add("<<Connections sucsessful>> -- <<Update--Success>>");
                }));
                
                cn = new SqlConnection(con);
            }
            catch
            {
                Invoke(new Action(() => 
                {
                    listBox3.Items.Add("<<Connection failed>> -- <<Update--Fail>>");
                }));
            }
            //string con = "*********************************************************************************************";
            Invoke(new Action(() =>
            {
                listBox3.Items.Add("<<Opening database connection>> -- <<Update--Success>>");
            }));
            cn.Open();

            using (SqlCommand cmd = new SqlCommand(queryString, cn))
            {
                try
                {
                    SqlDataReader reader = cmd.ExecuteReader(); //If queryString is not a correct query
                    try
                    {
                        while (reader.Read())
                        {
                            Invoke(new Action(() =>
                            {
                                listBox1.Items.Add(String.Format("{0}, {1}, {2}, {3}", reader[0], reader[1], reader[2], reader[3]));
                                listBox2.Items.Add("(" + String.Format("{0}, {1}, {2}", reader[0], reader[1], reader[2]) + ")");
                                fileOutPuts.Add("[" + String.Format("{0}, {1}, {2}", reader[0], reader[1], reader[2]) + "], ");
                                items++;
                                labelItems.Text = items.ToString();
                            }));
                        }
                    }
                    finally
                    {
                        // Always call Close when done reading.
                        reader.Close();
                        Thread fileThread = new Thread(new ThreadStart(writeOutData));
                        fileThread.Start(); //fileOut needs locking
                        //writeOut(fileOut);
                        Invoke(new Action(() =>
                        {
                            listBox3.Items.Add("<<Query done>>");
                        }));
                    }
                }
                catch
                {
                    Invoke(new Action(() =>
                    {
                        listBox3.Items.Clear();
                        listBox3.Items.Add("<<Invalid Query String>> -- <<Update Fail>>");
                    }));
                }


            } // command disposed here
        }

        private void writeOutData()
        {
            StreamWriter writer = new StreamWriter("C:/LogFiles/EllieSQLFileOut.txt");
            foreach (string line in fileOutPuts)
            {
                writer.Write(line);
            }
            writer.Close();
            System.Diagnostics.Process.Start("C:/LogFiles/EllieSQLFileOut.txt");
            StreamWriter writer2 = new StreamWriter("C:/LogFiles/Ones.txt");
            writer2.Write("[");
            for (int i = 0; i <= items; i++)
            {
                count++;
                writer2.Write("1, ");
            }
            writer2.Write("]");
            writer2.Close();
            System.Diagnostics.Process.Start("C:/LogFiles/Ones.txt");
        }

        private void storedProc()  //TODO add onto multi thread
        {
            int count = 0;
            Invoke(new Action(() =>
            {
                SPLabel.Text = count.ToString();
            }));
            string con = "Data Source=BA-R9WLXVM\\MSSQLSERVER03;Initial Catalog=DATEBASE_TWO;Integrated Security=True;";
            SqlConnection conn = new SqlConnection(con);
            conn.Open();
            SqlCommand cmd = new SqlCommand("AddToData", conn);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@data", "1");
            SqlDataReader reader = cmd.ExecuteReader();
            //MessageBox.Show(reader.Read().ToString());
            while (reader.Read())
            {
                Invoke(new Action(() =>
                {
                    SPLabel.Text = count.ToString();
                }));
                count++;
                Invoke(new Action(() =>
                {
                    SPLabel.Text = count.ToString();
                    count++;
                    SProctxt.Items.Add((reader[0].ToString()));
                    count++;
                    SProctxt.Items.Add((reader[1].ToString()));
                    count++;
                    SProctxt.Items.Add((reader[2].ToString()));
                }));
            }
            //Close reader and connection
            reader.Close();
            conn.Close();
        }

        private void Button2_Click(object sender, EventArgs e)
        {
            Thread procThread = new Thread(new ThreadStart(storedProc));
            procThread.Start();
            //storedProc();
        }

        private void ListBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void Label7_Click(object sender, EventArgs e)
        {
            
        }
    }
}